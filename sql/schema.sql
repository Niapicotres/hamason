create table cart (id bigint generated by default as identity, customer_id varchar(255) not null unique, primary key (id));
create table cart_item (price numeric(10,2) not null, quantity integer not null, cart_id bigint not null, id bigint generated by default as identity, product_id bigint not null, primary key (id));
create table FamilyCategory (id bigint generated by default as identity, nombre varchar(255) not null unique, primary key (id));
create table order_line (discount numeric(5,2) not null, pricePerUnit numeric(5,2) not null, quantity integer not null, id bigint generated by default as identity, order_id bigint not null, product_id bigint not null, primary key (id));
create table orders (creationDate date not null, id bigint generated by default as identity, customer_id varchar(255) not null, primary key (id));
create table product (discount numeric(5,2) not null, price numeric(5,2) not null, rating integer not null, stock integer not null, family_category_id bigint not null, id bigint generated by default as identity, description varchar(500) not null, imageUrl varchar(255) not null, primary key (id));
create table ROLES (rolename varchar(255) not null, primary key (rolename));
create table ROLES_userSet (Role_rolename varchar(255) not null, userSet_username varchar(255) not null, primary key (Role_rolename, userSet_username));
create table STATUS (id bigint generated by default as identity, statusName VARCHAR(50) DEFAULT 'STATUS' not null, primary key (id));
create table USERS (enabled boolean, expiryDateAccount date, expiryDateCredentials date, lockedAccount boolean, user_type varchar(31) not null, creditCardExpiry varchar(255), creditCardNumber varchar(255), email varchar(255), fullname varchar(255), password varchar(255), phone varchar(255), shippingAddress varchar(255), username varchar(255) not null, primary key (username));
create table USERS_HAS_ROLES (User_username varchar(255) not null, roleSet_rolename varchar(255) not null, primary key (User_username, roleSet_rolename));
alter table if exists cart add constraint FK1cc72efc8go1t77uly2pgeoua foreign key (customer_id) references USERS;
alter table if exists cart_item add constraint FK1uobyhgl1wvgt1jpccia8xxs3 foreign key (cart_id) references cart;
alter table if exists cart_item add constraint FKjcyd5wv4igqnw413rgxbfu4nv foreign key (product_id) references product;
alter table if exists order_line add constraint FKk9f9t1tmkbq5w27u8rrjbxxg6 foreign key (order_id) references orders;
alter table if exists order_line add constraint FKpf904tci8garypkvm32cqupye foreign key (product_id) references product;
alter table if exists orders add constraint FKsomyru3yf9d26vw4vmm4lej2l foreign key (customer_id) references USERS;
alter table if exists product add constraint FK3ucdnr0tem4uyxiid4qj02skr foreign key (family_category_id) references FamilyCategory;
alter table if exists ROLES_userSet add constraint FKcnw0b7uxxoxgr319r8b9j6805 foreign key (userSet_username) references USERS;
alter table if exists ROLES_userSet add constraint FKbio5odv0g03e2v8u437ynke7i foreign key (Role_rolename) references ROLES;
alter table if exists USERS_HAS_ROLES add constraint FK40jy793cg5kbts0087cm4engd foreign key (roleSet_rolename) references ROLES;
alter table if exists USERS_HAS_ROLES add constraint FKfy7x7il32rr6kyeos1va1fvh5 foreign key (User_username) references USERS;
